# Config file for LASsie package
# 
# It defines the following variables:
#  LASSIE_INCLUDE_DIRS - include directories
#  LASSIE_LIBRARIES    - libraries to link against

get_filename_component(LASSIE_INSTALL_ROOT "${CMAKE_CURRENT_LIST_FILE}" PATH)
set(LASSIE_INSTALL_ROOT "${LASSIE_INSTALL_ROOT}/@LASSIE_INSTALL_DIR_REL2CMAKE@")

if("${CMAKE_SIZEOF_VOID_P}" MATCHES "8")
	set(LASSIE_LIB_DIR_SUFFIX "64")
else()
    set(LASSIE_LIB_DIR_SUFFIX "")
endif()

if(IS_DIRECTORY "${LASSIE_INSTALL_ROOT}/include/@PROJECT_NAME@")
    set(LASSIE_INCLUDE_DIRS "${LASSIE_INSTALL_ROOT}/include")
endif()

find_library(LASSIE_LIBRARY_DEBUG "@PROJECT_NAME@@LASSIE_LIB_DEBUG_SUFFIX@" PATHS "${LASSIE_INSTALL_ROOT}/lib${LASSIE_LIB_DIR_SUFFIX}")
find_library(LASSIE_LIBRARY_RELEASE "@PROJECT_NAME@" PATHS "${LASSIE_INSTALL_ROOT}/lib${LASSIE_LIB_DIR_SUFFIX}")

unset(LASSIE_LIBRARIES CACHE)
if(LASSIE_LIBRARY_DEBUG)
    set(LASSIE_LIBRARIES "${LASSIE_LIBRARIES}" debug "${LASSIE_LIBRARY_DEBUG}")
endif()
if(LASSIE_LIBRARY_RELEASE)
    set(LASSIE_LIBRARIES "${LASSIE_LIBRARIES}" optimized "${LASSIE_LIBRARY_RELEASE}")
endif()
unset(LASSIE_LIBRARY_DEBUG CACHE)
unset(LASSIE_LIBRARY_RELEASE CACHE)

if(NOT LASSIE_INCLUDE_DIRS OR NOT LASSIE_LIBRARIES)
    message(FATAL_ERROR "LASsie was not found")
endif()

set(LASSIE_INCLUDE_DIRS "${LASSIE_INCLUDE_DIRS}" CACHE PATHS "@PROJECT_NAME@ include directory paths")
set(LASSIE_LIBRARIES "${LASSIE_LIBRARIES}" CACHE PATHS "@PROJECT_NAME@ library paths")

unset(LASSIE_LIB_DIR_SUFFIX)
unset(LASSIE_INSTALL_ROOT)
